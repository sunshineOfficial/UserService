definitions:
  pkg.User:
    properties:
      Email:
        type: string
      Id:
        type: string
      Name:
        type: string
      Surname:
        type: string
    type: object
  pkg.UserTicket:
    properties:
      TicketId:
        type: string
      UserId:
        type: string
    type: object
info:
  contact: {}
  description: Микросервис пользователей.
  title: user-service API
  version: "1.0"
paths:
  /user:
    get:
      consumes:
      - application/json
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.User'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Получает всех пользователей по ID
      tags:
      - user
    post:
      consumes:
      - application/json
      parameters:
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/pkg.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Добавляет нового пользователя
      tags:
      - user
    put:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      - description: User
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/pkg.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Обновляет пользователя
      tags:
      - user
  /user/{id}:
    delete:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Удаляет пользователя по ID
      tags:
      - user
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/pkg.User'
        "204":
          description: No Content
          schema:
            type: string
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Получает пользователя по ID
      tags:
      - user
  /user/{id}/tickets:
    get:
      consumes:
      - application/json
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            items:
              $ref: '#/definitions/pkg.UserTicket'
            type: array
        "400":
          description: Bad Request
          schema:
            type: string
      summary: Получает билеты пользователя по его ID
      tags:
      - user
swagger: "2.0"
